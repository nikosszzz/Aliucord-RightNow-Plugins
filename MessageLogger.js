(function(swcHelpers,entities,metro,patcher){'use strict';function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);if(e){Object.keys(e).forEach(function(k){if(k!=='default'){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:true,get:function(){return e[k]}});}})}n["default"]=e;return Object.freeze(n)}var swcHelpers__namespace=/*#__PURE__*/_interopNamespace(swcHelpers);var MessageLogger=function(Plugin1){swcHelpers__namespace.inherits(MessageLogger,Plugin1);var _super=swcHelpers__namespace.createSuper(MessageLogger);function MessageLogger(){swcHelpers__namespace.classCallCheck(this,MessageLogger);return _super.apply(this,arguments)}var _proto=MessageLogger.prototype;_proto.start=function start(){return swcHelpers__namespace.asyncToGenerator(function*(){patcher.before(metro.FluxDispatcher,"dispatch",(ctx,event)=>{if(event.type==="MESSAGE_UPDATE"&&event?.message?.content){if(metro.UserStore.getCurrentUser().id===event?.message?.author?.id)return;var original=metro.MessageStore.getMessage(event.message.channel_id,event.message.id);if(original?.content===undefined)return;event.message.content=`~~${original.content.replace(/~/g,"")}~~ [edited]
${event.message.content}`;}else if(event.type==="MESSAGE_DELETE"){var original1=metro.MessageStore.getMessage(event.channelId,event.id);if(original1===undefined)return;if(metro.UserStore.getCurrentUser().id===original1.author?.id)return;event.type="MESSAGE_UPDATE";event.message=Object.assign({},original1);if(event?.message?.content&&!event.message.content.endsWith(" [deleted]"))event.message.content=`~~${event.message.content.replace(/~/g,"")}~~ [deleted]`;}});})()};return MessageLogger}(swcHelpers__namespace.wrapNativeSuper(entities.Plugin));return MessageLogger;})(swcHelpers,globalThis.aliucord.entities,globalThis.aliucord.metro,globalThis.aliucord.utils.patcher);