(function(swcHelpers,entities,metro,patcher,reactNative){'use strict';function _interopNamespace(e){if(e&&e.__esModule)return e;var n=Object.create(null);if(e){Object.keys(e).forEach(function(k){if(k!=='default'){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:true,get:function(){return e[k]}});}})}n["default"]=e;return Object.freeze(n)}var swcHelpers__namespace=/*#__PURE__*/_interopNamespace(swcHelpers);var HiddenChannels=function(Plugin1){swcHelpers__namespace.inherits(HiddenChannels,Plugin1);var _super=swcHelpers__namespace.createSuper(HiddenChannels);function HiddenChannels(){swcHelpers__namespace.classCallCheck(this,HiddenChannels);return _super.apply(this,arguments)}var _proto=HiddenChannels.prototype;_proto.start=function start(){return swcHelpers__namespace.asyncToGenerator(function*(){var permissions=metro.getByProps("getChannelPermissions","can");function isHidden(channel){if(channel==undefined)return false;if(typeof channel==="string")channel=metro.ChannelStore.getChannel(channel);if(channel?.type===1)return false;return !patcher.callOriginal(permissions.can,permissions,metro.Constants.Permissions.VIEW_CHANNEL,channel)}patcher.before(permissions,"can",ctx=>{var[permId,channel]=ctx.args;if(permId===metro.Constants.Permissions.VIEW_CHANNEL){ctx.result=true;}});var notifications=metro.getByProps("hasUnread","hasUnreadPins","getMentionCount");patcher.before(notifications,"hasUnread",ctx=>{var[channel]=ctx.args;if(isHidden(channel))ctx.result=false;});patcher.before(notifications,"hasUnreadPins",ctx=>{var[channel]=ctx.args;if(isHidden(channel))ctx.result=false;});patcher.before(notifications,"getMentionCount",ctx=>{var[channel]=ctx.args;if(isHidden(channel))ctx.result=0;});var messageFetch=metro.getByProps("fetchMessages");patcher.before(messageFetch,"fetchMessages",ctx=>{var[_,channel]=ctx.args;if(isHidden(channel))ctx.result=null;});var navigator=metro.getByProps("selectChannel");patcher.before(navigator,"selectChannel",ctx=>{var[_,channelId]=ctx.args;if(isHidden(channelId))ctx.result=null;});var Router=metro.getByProps("transitionToGuild");patcher.before(Router,"transitionToGuild",ctx=>{var[_,channel]=ctx.args;if(isHidden(channel))ctx.result=null;});var MessagesConnected=metro.getByName("MessagesConnected");var MessageStyles=metro.Styles.createThemedStyleSheet({"title":{"fontFamily":"ABCGintoNormalVariable_Bold","fontSize":17,"backgroundColor":"#2f3136","textAlign":"left","color":"#ffffff","padding":20,"flex":1},"text":{"fontFamily":"Whitney-Medium","fontSize":14,"backgroundColor":"#2f3136","textAlign":"center","color":"#ffffff","padding":20,"flex":1}});patcher.after(MessagesConnected,"default",(ctx,res)=>{var channel=res.props.channel;if(!isHidden(channel))return;ctx.result=metro.React.createElement(reactNative.Text,{style:MessageStyles.text},metro.React.createElement(reactNative.Text,{style:MessageStyles.title},"Hidden Channel"),metro.React.createElement(reactNative.Text,null,"\n\n"+channel.topic),metro.React.createElement(reactNative.Text,null,"\n\nLast Message: "),metro.React.createElement(reactNative.Text,null,channel.lastMessageId?new Date(metro.SnowflakeUtils.extractTimestamp(channel.lastMessageId)).toLocaleString():"-"),metro.React.createElement(reactNative.Text,null,"\n\nLast Pin: "),metro.React.createElement(reactNative.Text,null,channel.lastPinTimestamp?new Date(channel.lastPinTimestamp).toLocaleString():"-"));});})()};return HiddenChannels}(swcHelpers__namespace.wrapNativeSuper(entities.Plugin));return HiddenChannels;})(swcHelpers,globalThis.aliucord.entities,globalThis.aliucord.metro,globalThis.aliucord.utils.patcher,globalThis.aliucord.metro.ReactNative);